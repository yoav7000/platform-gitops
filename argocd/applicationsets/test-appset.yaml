apiVersion: argoproj.io/v1alpha1
kind: ApplicationSet
metadata:
  name: services-by-env
  namespace: argocd
spec:
  goTemplate: true
  goTemplateOptions:
    - "missingkey=error"

  generators:
    - matrix:
        generators:
          - matrix:
              generators:
                - git:
                    repoURL: "https://github.com/yoav7000/platform-gitops.git"
                    revision: main
                    files:
                      - path: environments/**/config.yaml
                    pathParamPrefix: env
                    values:
                      # env_name from path (envs/<env>/config.yaml -> index 1)
                      env_name:  "{{ index .env.path.segments 1 }}"
                      # parsed YAML keys inside env file (expects keys `cluster:` and `namespace:`)
                      # cluster:   "{{ .cluster.name }}"
                      # namespace: "{{ .cluster.namespace }}"
                      debug_env_segments: "{{ printf \"%v\" .env.path.segments }}"


                # 2) service chart config: services/<service>/chart-config.yaml
                - git:
                    repoURL: "https://github.com/yoav7000/platform-gitops.git"
                    revision: main
                    files:
                      - path: services/**/chart-config.yaml
                    pathParamPrefix: svc
                    # values:
                    #   # service_name from path (services/<service>/chart-config.yaml -> index 1)
                    #   # service_name: "{{ index .svc.path.segments 1 }}"
                    #   # example fields expected in chart-config.yaml (adjust to your keys)
                    #   chart:        "{{ .svc.chart.repoURL }}"        # e.g. chart name or relative path
                    #   chartVersion: "{{ .svc.chart.targetRevision }}"      # optional
          - git:
              repoURL: "https://github.com/yoav7000/platform-gitops.git"
              revision: main
              files:
                - path: services/{{ index .svc.path.segments 1 }}/envs/{{ index .env.path.segments 1 }}/values.yaml
              pathParamPrefix: vals

  template:
    metadata:
      name: "{{ index .svc.path.segments 1 }}-{{ .values.env_name }}"
    spec:
      project: default
      source:
        repoURL: "{{.chart.repoURL}}"
        targetRevision: "{{.chart.targetRevision}}"
        path: "{{.chart.path}}"

        helm:
          valueFiles:
            - "services/{{ index .svc.path.segments 1 }}/envs/{{ .values.env_name }}/values.yaml"

      destination:
        # cluster/namespace read from envs/<env>/config.yaml
        server: "{{ .cluster.name }}"
        namespace: "{{ .cluster.namespace }}"

      syncPolicy:
        automated: {}
